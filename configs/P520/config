# Please see https://i3wm.org/docs/userguide.html for a complete reference!
# made from esta_base/configs/dellAW/config
set $mod mod4
set $alt mod1
set $ctrl control
set $shift Shift

font pango:System San Francisco Display 13

# Start XDG autostart .desktop files using dex. See also https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

############################ power off ####################################

set $Locker i3lock --nofork -c 000000 && sleep 1

set $mode_system System (l)ock, (e)xit , (s)uspend, (h)ibernate, (r)eboot, (p)oweroff

mode "$mode_system" {
    #exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym p exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $alt+q exec --no-startup-id $Locker
bindsym $mod+Shift+e mode "$mode_system"
##############################################################################


# NetworkManager is the most popular way to manage wireless networks on Linux, and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# kill focused window
bindsym $mod+q kill
workspace_layout tabbed 

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# move windows
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# change layout
bindsym $mod+w layout toggle tabbed splith stacking

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle


# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
#variables
set $workspace1e  "11: Thunar 2"
set $workspace2e  "12: code "
set $workspace3e  "13: chrome "
set $workspace4e  "14: python"
set $workspace5e  "15: steam"
set $workspace6e  "16: discord"
set $workspace7e  "17: task"
set $workspace8e  "18: fun"
set $workspace9e  "19: social"
set $workspace10e "20: game"

# set $workspace1  "1: discord "
# set $workspace2  "2: top "
# set $workspace3  "3: task "
# set $workspace4  "4: sublime "
# set $workspace5  "5: VM Manager"
# set $workspace6  "6: "
# set $workspace7  "7 "
# set $workspace8  "8: game"
# set $workspace9  "9"
# set $workspace10 "10: task "

# monitors
# xrandr --output DisplayPort-0 --off --output DisplayPort-1 --off --output DisplayPort-2 --off --output HDMI-A-0 --mode 1920x1080 --pos 0x0 --rotate normal --output DVI-D-0 --off

# set $monitor_one DP-0
set $monitor_two HDMI-A-0

# define ws-monitor relation
workspace $workspace1e  output $monitor_two
workspace $workspace2e  output $monitor_two
workspace $workspace3e  output $monitor_two
workspace $workspace4e  output $monitor_two
workspace $workspace5e  output $monitor_two
workspace $workspace6e  output $monitor_two
workspace $workspace7e  output $monitor_two
workspace $workspace8e  output $monitor_two
workspace $workspace9e  output $monitor_two
workspace $workspace10e output $monitor_two

# workspace $workspace1  output $monitor_one
# workspace $workspace2  output $monitor_one
# workspace $workspace3  output $monitor_one
# workspace $workspace4  output $monitor_one
# workspace $workspace5  output $monitor_one
# workspace $workspace6  output $monitor_one
# workspace $workspace7  output $monitor_one
# workspace $workspace8  output $monitor_one
# workspace $workspace9  output $monitor_one
# workspace $workspace10 output $monitor_one

# switch to workspace
 bindsym $alt+1 workspace $workspace1e
 bindsym $alt+2 workspace $workspace2e
 bindsym $alt+3 workspace $workspace3e
 bindsym $alt+4 workspace $workspace4e
 bindsym $alt+5 workspace $workspace5e
 bindsym $alt+6 workspace $workspace6e
 bindsym $alt+7 workspace $workspace7e
 bindsym $alt+8 workspace $workspace8e
 bindsym $alt+9 workspace $workspace9e
 bindsym $alt+0 workspace $workspace10e

#  bindsym $mod+1 workspace $workspace1
#  bindsym $mod+2 workspace $workspace2
#  bindsym $mod+3 workspace $workspace3
#  bindsym $mod+4 workspace $workspace4
#  bindsym $mod+5 workspace $workspace5
#  bindsym $mod+6 workspace $workspace6
#  bindsym $mod+7 workspace $workspace7
#  bindsym $mod+8 workspace $workspace8
#  bindsym $mod+9 workspace $workspace9
#  bindsym $mod+0 workspace $workspace10

# move focused container to workspace

 bindsym $alt+Shift+1 move container to workspace $workspace1e
 bindsym $alt+Shift+2 move container to workspace $workspace2e
 bindsym $alt+Shift+3 move container to workspace $workspace3e
 bindsym $alt+Shift+4 move container to workspace $workspace4e
 bindsym $alt+Shift+5 move container to workspace $workspace5e
 bindsym $alt+Shift+6 move container to workspace $workspace6e
 bindsym $alt+Shift+7 move container to workspace $workspace7e
 bindsym $alt+Shift+8 move container to workspace $workspace8e
 bindsym $alt+Shift+9 move container to workspace $workspace9e
 bindsym $alt+Shift+0 move container to workspace $workspace10e

#  bindsym $mod+Shift+1 move container to workspace $workspace1
#  bindsym $mod+Shift+2 move container to workspace $workspace2
#  bindsym $mod+Shift+3 move container to workspace $workspace3
#  bindsym $mod+Shift+4 move container to workspace $workspace4
#  bindsym $mod+Shift+5 move container to workspace $workspace5
#  bindsym $mod+Shift+6 move container to workspace $workspace6
#  bindsym $mod+Shift+7 move container to workspace $workspace7
#  bindsym $mod+Shift+8 move container to workspace $workspace8
#  bindsym $mod+Shift+9 move container to workspace $workspace9
#  bindsym $mod+Shift+0 move container to workspace $workspace10



# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

#colors
set $bg-color 	         #000000
set $bg-border           #000000
set $inactive-bg-color   #090909
set $font System San Francisco Display
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #6a6a6a

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $bg-color           $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $bg-color           $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00

bindsym $mod+d exec dmenu_run -sf grey99 -sb grey1 -nf grey60 -nb grey4 -fn 'System San Francisco Display-15'
bindsym $alt+c exec scrcpy

bar {
        tray_output $monitor_two
        # status_command i3status
        status_command "i3blocks -c ~/esta_base/configs/P520/i3blocks.conf"
        colors {
		background $bg-color
	    	separator #757575
		#                  border             background         text
		focused_workspace  $bg-color          $bg-color          $text-color
		inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
	}
}


# exec "xrandr --output eDP-2 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI-1 --mode 1920x1080 --pos 1920x0 --rotate normal --output DP-1 --off --output DP-1-2 --off --output HDMI-1-2 --off --output HDMI-1-3 --off --output DP-1-3 --off"

# my own functions
# use "xprop|grep CLASS" for getting class
# xrandr --output eDP-2 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output HDMI-1 --mode 1920x1080 --pos 1920x0 --rotate normal 
assign [class="discord"] $workspace6e
# assign [class="Alacritty"] $workspace2
assign [class="Lxtask"] $workspace7e


# assign [class="Chromium-browser"] $workspace3
# assign [class="firefox"] $workspace3
assign [class="Thunar"] $workspace1e
assign [class="Code"] $workspace2e
assign [class="Google-chrome"] $workspace3e
assign [class="Brave-browser"] $workspace8e

assign [instance="Google-chrome" ] $workspace3e
assign [class="steam"] $workspace5e
assign [class="PrismLauncher"] $workspace5e

# games
assign [class="dota2"] $workspace10e
assign [class="factorio"] $workspace10e
assign [class="spring"] $workspace10e
assign [class="RimWorldLinux"] $workspace10e
assign [class="Beyond-All-Reason"] $workspace10e
assign [class="OxygenNotIncluded"] $workspace10e
assign [class="Nomifactory (CEu version, 1.6.1-beta-4, Normal Mode)"] $workspace10e

# ark SE
assign [class="steam_app_346110"] $workspace10e



for_window [class="dota2"] floating disable
# for_window [class="Beyond-All-Reason"] floating enable




######################################## ScratchPad commands ##################################
bindsym $alt+space scratchpad show

# set $i3_scratchpad "~/esta_base/configs/i3-esta-scratchpad.py"

set $tilix_app "tilix"
set $Tilix_app_class "Tilix"
exec $tilix_app
for_window [class=$Tilix_app_class] move scratchpad
bindsym $alt+p [class=$Tilix_app_class] scratchpad show, resize set 1880px 1010px, move position center


set $terminator_app "terminator"
exec $terminator_app
set $Terminator_app_class "Terminator"
for_window [class=$Terminator_app_class] move scratchpad
bindsym $mod+Return [class=$Terminator_app_class] scratchpad show, resize set 1880px 1010px, move position center
bindsym $mod+x [class=$Terminator_app_class] scratchpad show, resize set 1880px 1010px, move position center


# set $social_app "chromium --force-device-scale-factor=1.2"
set $social_app "chromium"
exec $social_app
set $social_app_class "Chromium"
for_window [class=$social_app_class] move scratchpad
bindsym $alt+Return [class=$social_app_class] scratchpad show, resize set 1880px 1010px, move position center
bindsym $alt+x [class=$social_app_class] scratchpad show, resize set 1880px 1010px, move position center
for_window [class=$social_app_class] border pixel 3

set $pavucontrol_app "pavucontrol"
set $Pavucontrol_app_class "Pavucontrol"
exec $pavucontrol_app
for_window [class=$Pavucontrol_app_class] move scratchpad
bindsym $alt+s [class=$Pavucontrol_app_class] scratchpad show, resize set 1000px 700px, move position center

####################### execute startup #########################################
exec compton -f
exec nitrogen --restore
exec i3-msg workspace $workspace3e
exec google-chrome
exec i3-msg workspace $workspace8e
exec thunar
exec code
exec lxtask
exec steam
exec discord



mode "passthrough" {
    bindsym Mod4+Escape mode "default"
}
bindsym Mod4+Escape mode "passthrough"

set $mode_screen Screenshot (f)ull, (w)indow, (s)election

mode "$mode_screen" {
    bindsym f exec --no-startup-id maim --format=png | xclip -selection clipboard -t image/png, mode "default"
    bindsym w exec --no-startup-id maim --format=png --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png, mode "default"
    bindsym s exec --no-startup-id maim --format=png --select | xclip -selection clipboard -t image/png, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+p mode "$mode_screen"
bindsym $mod+$shift+s exec --no-startup-id maim --format=png --select | xclip -selection clipboard -t image/png



# set $mode_chrome chrome profile: 1 2
# mode "$mode_chrome" {
#     bindsym 1 exec google-chrome --profile-directory="Default", workspace $workspace8e; mode "default"
#     bindsym 2 exec google-chrome --profile-directory="Profile 1", workspace $workspace3e; mode "default"
#     bindsym 3 exec /opt/brave.com/brave/brave-browser --profile-directory=Default --app-id=mkajbpcipmmbcjgjocppiimpgelnddjm, mode "default"

#     bindsym Escape mode "default"
# }
# bindsym $mod+s mode "$mode_chrome" 

bindsym $mod+s exec bash ~/Desktop/brave_fun.sh

